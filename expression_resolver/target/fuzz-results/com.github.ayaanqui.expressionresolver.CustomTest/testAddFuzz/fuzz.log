Saving new input (at run 1): input #0 of size 16; total coverage = 64
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/corpus/id_000000 random +count+cov+valid
Found crash: class java.lang.AssertionError - Hello world = 
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/failures/id_000000 src:000000,havoc:11 +crash
Saving new input (at run 26): input #1 of size 16; total coverage = 64
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/corpus/id_000001 src:000000,havoc:14 +count
Found crash: class java.lang.AssertionError - Hello world = 
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/failures/id_000001 src:000000,havoc:11 +crash
Saving new input (at run 125): input #2 of size 16; total coverage = 64
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/corpus/id_000002 src:000000,havoc:8 +count
Saving new input (at run 200): input #3 of size 16; total coverage = 64
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/corpus/id_000003 src:000000,havoc:8 +count
Saving new input (at run 923): input #4 of size 16; total coverage = 64
Saved - /Users/aditya/IdeaProjects/expression-resolver/target/fuzz-results/com.github.ayaanqui.expressionresolver.CustomTest/testAddFuzz/corpus/id_000004 src:000000,havoc:12 +count

# Cycle 1 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 2 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 3 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 4 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 5 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 6 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 7 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 8 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 9 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 10 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 11 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered





# Cycle 12 completed.
Here is a list of favored inputs:
Input 0 is responsible for 64 branches
Total 64 branches covered




